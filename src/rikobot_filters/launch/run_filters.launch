
<launch>

	<!-- Complementary filter -->
	<node pkg="imu_complementary_filter" type="complementary_filter_node"
	  name="complementary_filter_gain_node" output="screen">
		<param name="do_bias_estimation" value="true"/>
		<param name="do_adaptive_gain" value="true"/>
		<param name="use_mag" value="false"/>
		<param name="gain_acc" value="0.01"/>
		<param name="gain_mag" value="0.01"/>
		<param name="publish_tf" value="false"/>
		<param name="fixed_frame" value="odom"/>
	</node>
	

	<!-- This node will publish the pose to /robot_pose_ekf/odom_combined, which will be translated into odometry message by pose_to_odom. -->
	<!-- It also broadcasts the odom â†’ base_footprint transform -->
	<node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
		<param name="output_frame" value="odom"/>
		<param name="freq" value="20.0"/>
		<param name="sensor_timeout" value="1.0"/>
		<param name="odom_used" value="true"/>
		<param name="imu_used" value="true"/>
		<param name="vo_used" value="false"/>
		<param name="debug" value="false"/>
		<param name="self_diagnose" value="false"/>
		
		<remap from="imu_data" to="/imu/data"/>
		<!--remap from="base_footprint" to="base_link"/-->
		<remap from="vo" to="/rtabmap/odom"/>
	</node>
	
	<node pkg = "rikobot_filters" type = "pose_to_odom" name = "pose_to_odom" />
</launch>
